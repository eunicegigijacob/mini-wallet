openapi: 3.0.0
info:
  title: Mini Wallet API
  description: API for managing a mini wallet application with user authentication, wallet operations, and transaction management
  version: 1.0.0
  contact:
    email: support@miniwallet.com
servers:
  - url: http://localhost:3000
    description: Local development server
  - url: https://api.miniwallet.com
    description: Production server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the user
        email:
          type: string
          format: email
          description: User's email address
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name
        phone:
          type: string
          description: User's phone number
        wallet:
          $ref: '#/components/schemas/Wallet'
          description: User's wallet
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the user was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the user was last updated

    RegisterRequest:
      type: object
      required:
        - email
        - password
        - firstName
        - lastName
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password (min 8 characters)
        firstName:
          type: string
          description: User's first name
        lastName:
          type: string
          description: User's last name

    LoginRequest:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
          description: User's email address
        password:
          type: string
          format: password
          description: User's password

    AuthResponse:
      type: object
      properties:
        accessToken:
          type: string
          description: JWT access token
        user:
          $ref: '#/components/schemas/User'

    Wallet:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the wallet
        userId:
          type: string
          format: uuid
          description: ID of the user who owns the wallet
        user:
          $ref: '#/components/schemas/User'
          description: The user who owns this wallet
        balance:
          type: number
          format: float
          description: Current balance in the wallet
        currency:
          type: string
          description: Currency code (e.g., USD, EUR)
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
          description: List of transactions associated with this wallet
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the wallet was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the wallet was last updated

    FundRequest:
      type: object
      required:
        - walletId
        - amount
      properties:
        walletId:
          type: string
          format: uuid
          description: ID of the wallet to fund
        amount:
          type: number
          format: float
          minimum: 0.01
          description: Amount to fund the wallet with

    TransferRequest:
      type: object
      required:
        - senderWalletId
        - receiverWalletId
        - amount
      properties:
        senderWalletId:
          type: string
          format: uuid
          description: ID of the sender's wallet
        receiverWalletId:
          type: string
          format: uuid
          description: ID of the receiver's wallet
        amount:
          type: number
          format: float
          minimum: 0.01
          description: Amount to transfer

    WithdrawRequest:
      type: object
      required:
        - walletId
        - amount
      properties:
        walletId:
          type: string
          format: uuid
          description: ID of the wallet to withdraw from
        amount:
          type: number
          format: float
          minimum: 0.01
          description: Amount to withdraw

    Transaction:
      type: object
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the transaction
        type:
          type: string
          enum: [FUND, TRANSFER, WITHDRAWAL]
          description: Type of transaction
        amount:
          type: number
          format: float
          description: Transaction amount
        senderWalletId:
          type: string
          format: uuid
          description: ID of the sender's wallet (null for FUND)
        receiverWalletId:
          type: string
          format: uuid
          description: ID of the receiver's wallet (null for WITHDRAWAL)
        reference:
          type: string
          description: Unique reference for the transaction
        status:
          type: string
          enum: [PENDING, COMPLETED, FAILED]
          description: Status of the transaction
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the transaction was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the transaction was last updated

    TransactionStats:
      type: object
      properties:
        totalTransactions:
          type: integer
          description: Total number of transactions
        totalFunded:
          type: number
          format: float
          description: Total amount funded
        totalTransferred:
          type: number
          format: float
          description: Total amount transferred
        totalWithdrawn:
          type: number
          format: float
          description: Total amount withdrawn

    PaginatedTransactions:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        meta:
          type: object
          properties:
            total:
              type: integer
              description: Total number of transactions
            page:
              type: integer
              description: Current page number
            limit:
              type: integer
              description: Number of items per page
            totalPages:
              type: integer
              description: Total number of pages

    Error:
      type: object
      properties:
        statusCode:
          type: integer
          description: HTTP status code
        message:
          type: string
          description: Error message
        error:
          type: string
          description: Error type

paths:
  /auth/register:
    post:
      summary: Register a new user
      description: Create a new user account
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterRequest'
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '409':
          description: Email already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /auth/login:
    post:
      summary: Login user
      description: Authenticate user and get access token
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user/profile:
    get:
      summary: Get user profile
      description: Get the current user's profile
      tags:
        - User
      security:
        - bearerAuth: []
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Update user profile
      description: Update the current user's profile
      tags:
        - User
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  description: User's first name
                lastName:
                  type: string
                  description: User's last name
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallet:
    get:
      summary: Get current user's wallet
      description: Get the wallet associated with the current user
      tags:
        - Wallet
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Wallet retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallet/{id}:
    get:
      summary: Get wallet by ID
      description: Get a wallet by its ID
      tags:
        - Wallet
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Wallet ID
      responses:
        '200':
          description: Wallet retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Wallet'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallet/fund:
    post:
      summary: Fund a wallet
      description: Add funds to a wallet
      tags:
        - Wallet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FundRequest'
      responses:
        '201':
          description: Wallet funded successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallet/transfer:
    post:
      summary: Transfer money between wallets
      description: Transfer money from one wallet to another
      tags:
        - Wallet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
      responses:
        '201':
          description: Transfer successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input or insufficient funds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallet/withdraw:
    post:
      summary: Withdraw money from a wallet
      description: Withdraw money from a wallet
      tags:
        - Wallet
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WithdrawRequest'
      responses:
        '201':
          description: Withdrawal successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Invalid input or insufficient funds
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /wallet/{id}/transactions:
    get:
      summary: Get wallet transactions
      description: Get transactions for a wallet with optional filtering
      tags:
        - Wallet
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Wallet ID
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
            minimum: 1
          description: Page number
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 10
            minimum: 1
            maximum: 100
          description: Number of items per page
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Start date for filtering (YYYY-MM-DD)
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: End date for filtering (YYYY-MM-DD)
        - name: type
          in: query
          required: false
          schema:
            type: string
            enum: [FUND, TRANSFER, WITHDRAWAL]
          description: Transaction type filter
      responses:
        '200':
          description: Transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTransactions'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/{id}:
    get:
      summary: Get transaction by ID
      description: Get a transaction by its ID
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Transaction ID
      responses:
        '200':
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/reference/{reference}:
    get:
      summary: Get transaction by reference
      description: Get a transaction by its reference
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - name: reference
          in: path
          required: true
          schema:
            type: string
          description: Transaction reference
      responses:
        '200':
          description: Transaction retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Transaction not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/stats/{walletId}:
    get:
      summary: Get transaction statistics
      description: Get transaction statistics for a wallet
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - name: walletId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Wallet ID
        - name: startDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: Start date for filtering (YYYY-MM-DD)
        - name: endDate
          in: query
          required: false
          schema:
            type: string
            format: date
          description: End date for filtering (YYYY-MM-DD)
      responses:
        '200':
          description: Transaction statistics retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStats'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /transactions/recent/{walletId}:
    get:
      summary: Get recent transactions
      description: Get recent transactions for a wallet
      tags:
        - Transactions
      security:
        - bearerAuth: []
      parameters:
        - name: walletId
          in: path
          required: true
          schema:
            type: string
            format: uuid
          description: Wallet ID
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            default: 5
            minimum: 1
            maximum: 20
          description: Number of recent transactions to retrieve
      responses:
        '200':
          description: Recent transactions retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Wallet not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
